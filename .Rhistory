levels(shuttle$use)
unique(unclass(shuttle$use))
exp(0.2831     )
data$newwind <- factor(data$newwind, levels=c("tail","head"))
data$newwind <- factor(data$wind, levels=c("tail","head"))
levels(data$newwind)
fite <- glm(newuse ~ newwind, data=data, family="binomial")
exp(summary(fit)$coef)
exp(summary(fite)$coef)
exp(0.25131    )
library(MASS)
data(shuttle)
data <- shuttle
data$newuse <- as.numeric(data$use=="auto")
levels(data$wind)
data$newwind <- factor(data$wind, levels=c("tail","head"))
levels(data$newwind)
class(data$magn)
levels(data$magn)
fit <- glm(newuse ~ wind + magn, data=data, family="binomial")
summary(fit)$coef
fit <- glm(newuse ~ newwind + magn, data=data, family="binomial")
summary(fit)$coef
exp(summary(fit)$coef)[2]
summary(fit)$coef[2]
sample(data,5)
?sample
dim(data)
sample.int(data,size=5)
sub <- sample(2,nrow(data),replace=TRUE, prob=c(0.1,0.9))
data[sub==1,]
data[sub==2,]
data[sub==0,]
dim(sub)
sample(2,nrow(data),replace=TRUE, prob=c(0.1,0.9))
sub <- sample(2,nrow(data),replace=TRUE, prob=c(0.1,0.9))
length(sub)
data[which(sub==1),]
library(plyr)
library(dplyr)
dim(mtcars)
attach(mtcars)
new <- mtcars %>%
mutate(avgwt=mean(wt, na.rm=TRUE))
dim(new)
new
new <- mtcars %>%
mutate(avgwt=mean(wt, na.rm=TRUE), pct=wt/avgwt)
new
new <- mtcars %>%
mutate(avgwt=mean(wt, na.rm=TRUE), pct=wt/avgwt, diff=pct-lag(pct))
new <- mtcars %>%
mutate(avgwt=mean(wt, na.rm=TRUE), pct=wt/avgwt, diff=pct-lag(pct))
new
mutate(avgwt=mean(wt, na.rm=TRUE), pct=wt/avgwt, diff=pct-lag(pct), cul=pct+lag(pct))
new <- mtcars %>%
mutate(avgwt=mean(wt, na.rm=TRUE), pct=wt/avgwt, diff=pct-lag(pct), cul=pct+lag(pct))
new
new <- mtcars %>%
mutate(avgwt=mean(wt, na.rm=TRUE), pct=wt/avgwt, diff=pct-lag(pct), cul=pct+lag(cul))
mutate(avgwt=mean(wt, na.rm=TRUE), pct=wt/avgwt, diff=pct-lag(pct), cul=cul+pct)
new <- mtcars %>%
mutate(avgwt=mean(wt, na.rm=TRUE), pct=wt/avgwt, diff=pct-lag(pct), cul=cul+pct)
new$cul <- 0
new$cul <- new$cul + pct
new$cul <- new$cul + wt
new
new <- mtcars %>%
mutate(avgwt=mean(wt, na.rm=TRUE), pct=wt/avgwt, diff=pct-lag(pct), cul=cumsum(wt))
new
new <- mtcars %>%
select(wt,mpg,drive=gear,contain("cy"),starts_with("d"),ends_with("p"))
new <- mtcars %>%
select(wt,mpg,drive=gear,contains("cy"),starts_with("d"),ends_with("p"))
new
select(wt,mpg,drive=gear,contains("cy","i"),starts_with("d"),ends_with("p"))
new <- mtcars %>%
select(wt,mpg,drive=gear,contains("cy","i"),starts_with("d"),ends_with("p"))
select(wt,mpg,drive=gear,contains(c("cy","i"),starts_with("d"),ends_with("p"))
select(wt,mpg,drive=gear,contains("cy","i"),starts_with("d"),ends_with("p"))
new <- mtcars %>%
select(wt,mpg,drive=gear,contains(c("cy","i")),starts_with("d"),ends_with("p"))
new <- mtcars %>%
select(wt,mpg,drive=gear,contains("cy"),contains("i"),starts_with("d"),ends_with("p"))
new
new <- mtcars %>%
mutate(avgwt=mean(wt, na.rm=TRUE), n=n(), distinct=n_distinct())
new <- mtcars %>%
mutate(avgwt=mean(wt, na.rm=TRUE), n=n(), distinct=n_distinct(gear))
new
new <- mtcars %>%
mutate(n=n(), d=n_distinct(gear),q=quantile(wt,0.75),iqr=iqr(wt),m=mad(wt))
?iqt
?iqr
??iqr
new <- mtcars %>%
mutate(n=n(), d=n_distinct(gear),q=quantile(wt,0.75),iqr=IQR(wt),m=mad(wt))
head(new)
??mad
new$wt-mean(new$wt,na.rm=TRUE)
median(new$wt-mean(new$wt,na.rm=TRUE))
?mad
median(new$wt-median(new$wt,na.rm=TRUE))
median(abs(new$wt-median(new$wt,na.rm=TRUE)))
sort(abs(new$wt-median(new$wt,na.rm=TRUE)))
new <- mtcars %>%
group_by(gear) %>%
mutate(n=n())
new
.Last.value %>% View()
View(new)
new <- mtcars %>%
mutate(n=n())
new <- mtcars %>%
group_by(gear)
new <- mtcars %>%
group_by(gear) %>%
summarize(n_distinct(cyl))
new
library(plyr)
library(dplyr)
sub <- mtcars %>%
filter(gear %in% c(4,5))
sub
sub <- mtcars %>%
filter(gear ==4 |cyl==8)
sub
sub <- mtcars %>%
filter(gear ==4, cyl==8)
sub
sub <- mtcars %>%
filter(gear ==3, cyl==8)
sub
sub <- mtcars %>%
filter(gear ==3, cyl!=8)
sub
filter(xor(gear ==3, cyl!=8))
filter(XOR(gear ==3, cyl!=8))
?xor
sub <- mtcars %>%
filter(XOR(gear ==3, cyl!=8))
sub <- mtcars %>%
filter(xor(gear ==3, cyl!=8))
sub
sub <- mtcars %>%
filter(xor(gear ==3, cyl==8))
sub
new <- select(mtcars, -(wt:mpg))
new
new <- select(mtcars, -(5:6))
new
arrange(sub, desc(wt))
?outer_join
?inner_join
100 %/% 60
100 %% 60
summarize(sub, mean(wt))
summarize(sub, mean(wt), sum(wt), cumsum(wt))
group_by(new, gear)
grp <- group_by(new, gear)
summarize(grp, mean(wt), sum(wt), cumsum(wt))
summarize(grp, mean(qsec), cumsum(wt))
summarize(grp, mean(qsec), cumsum(qsec))
summarize(grp, IQR(qsec)*c(-1.5,1.5))
summarize(grp, median(qsec)+(IQR(qsec)*-1.5))
summarize(grp, outliermin=median(qsec)+(IQR(qsec)*-1.5),outliermin=median(qsec)+(IQR(qsec)*1.5))
summarize(grp, outliermin=median(qsec)+(IQR(qsec)*-1.5),outliermax=median(qsec)+(IQR(qsec)*1.5))
mean(mtcars$qsec > 20)
mean(mtcars$qsec)
mtcars$qsec > 20
summarize(mtcars, mean(qsec > 20))
grp
test <- summarize(grp, over = mean(qsec>15))
test
test <- summarize(grp, over = mean(which(qsec>15))
)
test
test <- summarize(grp, over = mean(subset(qsec>15)))
test <- summarize(grp, over = mean(subset(grp,qsec>15)))
test <- summarize(grp, over = mean(filter(qsec>15)))
test <- summarize(grp, over = mean((qsec>15)*qsec))
test
(mtcars$qsec > 20)*mtcars$qsec
?tally
tbl(mtcars,sql("SELECT * FROM mtcars WHERE qsec > 15"))
test <- summarize(grp, over = mean(ifelse(qsec>15,qsec,0))
)
test
test <- summarize(grp, over = mean(ifelse(qsec>15,qsec,NA))
)
test
test <- summarize(grp, over = mean(!is.na(ifelse(qsec>15,qsec,NA))))
test
test <- summarize(grp, over = mean(ifelse(qsec>15,qsec,NA)), na.rm=TRUE)
test
test <- summarize(grp, over = mean(ifelse(qsec>15,qsec,NA), na.rm=TRUE))
test
str(mtcars)
library(ggplot2)
g <- ggplot(mtcars, aes(x=factor(am),y=mpg))
g + geom_boxplot()
attach(mtcars)
levels(am)
levels(mtcars$am)
levels(factor(am))
?mtcars
g <- ggplot(mtcars, aes(x=factor(am),y=gear))
g + geom_boxplot()
g <- ggplot(mtcars, aes(x=factor(am),y=factor(gear)))
g + geom_point(size=n())
g + geom_point()
d <- mtcars
library(plyr)
library(dplyr)
dmpg <- mtcars >%>
dmpg <- mtcars %>%
group_by(am, gear)
dmpg <- mtcars %>%
group_by(am, gear) %>%
tally()
dmpg
g <- ggplot(dmpg, aes(x=factor(am),y=factor(gear)))
g + geom_point(aes(size=n)) + scale_size_area()
g + geom_point(aes(size=n)) + scale_size_area(guide=FALSE)
g + geom_point(aes(size=n), shape=21, fill="khaki") + scale_size_area(max_size=20,guide=FALSE)
g + geom_point(aes(size=n), shape=21, fill="khaki") + scale_size_area(max_size=20,guide=FALSE) + stat_summary(fun.y="mean",shape=23, size=3)
g + geom_point(aes(size=n), shape=21, fill="khaki") + scale_size_area(max_size=20,guide=FALSE) + stat_summary(fun.y="mean",geom="point", shape=23, size=3)
names(mtcars)
d <- mtcars
d$cyl <- factor(d$cyl)
d$gear <- factor(d$gear)
d$vs <- factor(d$vs)
d$am <- factor(d$am)
fitall <- glm(am ~ ., data=d, family=binomial)
summary(fitall)
d <- mtcars
d$cyl <- factor(d$cyl)
d$vs <- factor(d$vs)
d$gear <- factor(d$gear)
d$carb <- factor(d$carb)
fitall <- glm(am ~ ., data=d, family=binomial)
summary(fitall)
fitall <- glm(am ~ mpg + gear, data=d, family=binomial)
summary(fitall)
fitall <- glm(am ~ mpg+cyl+disp+hp+drat+wt+qsec+vs+gear+carb, data=d, family=binomial)
fitbest <- step(fitall, direction="both")
?step
summary(fitbest)
deviance(fitbest)
?deviance
1.476088e-08-4.3230e+01
pchisq(-43.23,2)
exp(18)
fitall <- glm(mpg ~ am+cyl+disp+hp+drat+wt+qsec+vs+gear+carb, data=d, family=binomial)
fitall <- glm(vs ~ am+cyl+disp+hp+drat+wt+qsec+mpg+gear+carb, data=d, family=binomial)
d$mpgnew <- cut(d$mpg,breaks=c(-Inf,mean(d$mpg),Inf),labels=c(0,1))
table(d$mpgnew)
fitall <- glm(mpgnew ~ am+cyl+disp+hp+drat+wt+qsec+vs+gear+carb, data=d, family=binomial)
fitbest <- step(fitall, direction="both")
summary(step(fitall, direction="both"))
fitall <- glm(mpgnew ~ am+cyl+disp+hp, data=d, family=binomial)
fitall <- glm(mpgnew ~ cyl+disp+hp, data=d, family=binomial)
fitall <- glm(mpgnew ~ cyl+hp, data=d, family=binomial)
fitall <- glm(mpgnew ~ cyl, data=d, family=binomial)
fitall <- glm(mpgnew ~ hp, data=d, family=binomial)
fitall <- glm(mpgnew ~ factor(hp), data=d, family=binomial)
summary(fitall)
ggplot(d, aes(x=mpgnew,y=hp))+geom_boxplot()
library(tree)
library(party)
ctree(mpg ~ hp, type="simple")
ctree(mpg ~ hp)
plot(ctree(mpg ~ hp))
plot(ctree(mpg ~ hp), simple=TRUE)
plot(ctree(mpg ~ hp, simple=TRUE))
?ctree
plot(ctree(mpg ~ hp), type="simple")
fitall <- lm(mpg ~ am+cyl+disp+hp+drat+wt+qsec+vs+gear+carb, data=d)
summary(fitall)
fitbest(fitall, direction="both")
fitbest <- step(fitall, direction="both")
summary(fitbest)
fitadj <- lm(mpg ~ I(cyl==6)+hp+wt, data=d)
summary(fitadj)
anova(fitbest,fitadj)
pchisq(173.61-151.03,2)
fitadj <- lm(mpg ~ hp+wt, data=d)
summary(fitadj)
anova(fitbest,fitadj)
table(gear, cyn)
table(gear, cyl)
pchisq(321.9-113.5, 2)
fitall <- glm(mpgnew ~ factor(hp), data=d, family=binomial)
fitall$coef
fitall$coef[2]
dim(20)
try <- dim(501)
try
d$pred <- predict(fitall)
head(d,20)
d$pred <- predict(fitall, type="probabilities")
?predict
d$pred <- predict(fitall, probability=TRUE)
head(d,20)
d$pred <- predict(fitall, type="response")
head(d,20)
d$pred2 <- m1$fitted
d$pred2 <- fitall$fitted
head(d,20)
summary(fitall)$coef
fitall$coef
fitall$fitted
predict(fitall)
install.packages("caret")
install.packages("caret", dependencies=TRUE)
library(kernlab)
trainUrl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testUrl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file(trainUrl, destfile="./pmltraining.csv")
RFfit <- train(classe ~ ., data=trainData, method="rf", trControl=trainControl(method="cv",5),ntree=250)
library(caret)
RFfit <- train(classe ~ ., data=trainData, method="rf", trControl=trainControl(method="cv",5),ntree=250)
set.seed(1234)
inTrain <- createDataPartition(trainingok$classe, p=0.7, list=FALSE)
training <- read.csv("./pmltraining.csv")
testing <- read.csv("./pmltesting.csv")
training <- training[,colSums(is.na(training))==0]
testing <- testing[,colSums(is.na(testing))==0]
classe <- training$classe
trainRemove <- grepl("^X|timestamp|window", names(training))
training <- training[, !trainRemove]
trainingok <- training[, sapply(training, is.numeric)]
trainingok$classe <- classe
testRemove <- grepl("^X|timestamp|window", names(testing))
testing <- testing[, !testRemove]
testingok <- testing[, sapply(testing, is.numeric)]
inTrain <- createDataPartition(trainingok$classe, p=0.7, list=FALSE)
trainData <- trainingok[inTrain,]
testData <- trainingok[-inTrain,]
control <- trainControl(method="cv", 5)
RFfit <- train(classe ~ ., data=trainData, method="rf", trControl=control,ntree=100)
predict <- predict(RFfit, testingok[,-length(names(testingok))])
answers = rep("A", 20)
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(predict)
?tree
library(tree)
library(ctree)
library(party)
?tree
library(part)
?ctree
library(ElemStatLearn)
install.packages("ElemStatLearn")
data(vowel.train)
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
set.seed(33833)
rffit <- train(y~.,data=vowel.train,method=rf)
rffit <- train(y~.,data=vowel.train,method="rf")
library(caret)
rffit <- train(y~.,data=vowel.train,method=rf)
rffit <- train(y~.,data=vowel.train,method="rf")
gbmfit <- train(y~.,data=vowel.train,method="gbm")
predrf <- predict(rffit,newdata=vowel.test)
predgbm <- predict(gbmfit,newdata=vowel.test)
confusionMatrix(vowel.test$y,predrf)
confusionMatrix(predrf, vowel.test$y)
confusionMatrix(predrf, vowel.test$y)$overall[1]
length(predrf)
length(vowel.test$y)
table(predrf)
library(caret)
?knn
??knn
library(MASS)
?lda
pairs(mtcars)
ldafit <- lda(mpg ~ ., data=mtcars)
summary(ldafit)
ldafit
data <- mtcars
data$hp <- NULL
str(data)
cor(mtcars)
cor(mtcars, method="spearman")
?cor
library(pROC)
?roc
quantile(mtcars$mpg)
quantile(scale(mtcars$mpg)
)
try <- mtcars[,-mpg]
try <- mtcars[,names(mtcars)!="mpg"]
names(try)
install.packages("FactoMineR")
data(decathlon)
??decathlon
library(FactoMineR)
data(decathlon)
str(decathlon)
summary(decathlon)
res <- PCA(decathlon, quanti.sup= 11:12, quali.sup=13)
?quanti.sup
?PCA
head(decathlon)
dimdesc(res)
dimdesc(res, proba=0.20)
library(party)
fit <- ctree(Species ~ Sepal.Length + Sepal.Width, data=iris)
anova(fit)
fit2 <- glm(Species ~ Sepal.Length + Sepal.Width, data=iris)
names(mtcars)
fit2 <- glm(am ~ disp + hp, data=mtcars)
anova(fit2)
attributes(fit)
anova(fit, test="Chisq")
summary(fit)
library(rpart)
fit <- rpart(Species ~ Sepal.Length + Sepal.Width, data=iris)
summary(fit)
anova(fit)
?anova
library(shiny)
install.packages("shiny")
library(shiny)
library(manipulate)
?shinyUI
?runApp
shinyUI(pagewithSidebar(headerPanel("DataScience"),sidebarPanel(h3('Sidebar text')),mainPanel(h3('Main Panel text'))))
shinyUI(pageWithSidebar(headerPanel("DataScience"),sidebarPanel(h3('Sidebar text')),mainPanel(h3('Main Panel text'))))
shinyServer(function(input,output){})
runApp()
getwd()
library(shiny)
<html>
runExample("01_hello")
runApp("./shiny/testbyvince")
shiny::runApp('shiny/testbyvince/Diabetes prediction')
shiny::runApp('shiny/testbyvince/Diabetes prediction')
shiny::runApp('shiny/testbyvince/Image')
shiny::runApp('shiny/testbyvince/Image')
shiny::runApp('shiny/testbyvince/Image')
shiny::runApp('shiny/testbyvince/Image')
shiny::runApp('shiny/testbyvince/Image')
shiny::runApp('shiny/testbyvince/Image')
shiny::runApp('shiny/testbyvince/Image')
shiny::runApp('shiny/testbyvince/Image')
library(UsingR)
install.packages("HistData")
shiny::runApp('shiny/testbyvince/Image')
library(UsingR)
data(galton)
shiny::runApp('shiny/testbyvince/Image')
runApp(display.mode='showcase')
runApp('shiny/testbyvince/Image', display.mode='showcase')
shiny::runApp('shiny/testbyvince/Image')
data(galton)
library(manipulate)
manipulate(plot(1:x),x=slider(1,100))
install.packages("leaps")
?regsubsets
?regsubset
?step
library(shiny)
mean(mtcars[gear==2,mpg])
data(mtcars)
mtcars[gear==2,mpg]
names(mtcars)
mtcars[1:2,mpg]
mtcars[,"mpg"]
mean(mtcars[gear==2,"mpg"])
mean(mtcars["gear"==2,"mpg"])
mean(mtcars[which(gear==2),"mpg"])
mean(mtcars[mtcars$gear==2,"mpg"])
mtcars[mtcars$gear==2,"mpg"]
mtcars[which(mtcars$gear==2),"mpg"]
mtcars$gear==2
mtcars$gear==3
mean(mtcars["gear"==3,"mpg"])
mean(mtcars[gear==3,"mpg"])
mean(mtcars[which(mtcars$gear==3),"mpg"])
shiny::runApp('shiny/testbyvince/CourseProj')
shiny::runApp('shiny/testbyvince/CourseProj')
shiny::runApp('shiny/testbyvince/CourseProj')
shiny::runApp('shiny/testbyvince/CourseProj')
shiny::runApp('shiny/testbyvince/CourseProj')
shiny::runApp('shiny/testbyvince/CourseProj')
shiny::runApp('shiny/testbyvince/CourseProj')
unique(mtcars$gear)
shiny::runApp('shiny/testbyvince/CourseProj')
shiny::runApp('shiny/testbyvince/CourseProj')
library(Rtools)
library(Rtool)
install.packages("Rtools")
library(devtools)
library(shinyapps)
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shinyapps::setAccountInfo(name='vincetan', token='81F656F6A85B7B290FCB71A178CEF7CB', secret='wBe33g+oe5P179ljfVIs3Y67tWUFwn9Nsy5F2YIf')
shinyapps::deployApp(("./shiny/testbyvince/CourseProj"))
library(slidify)
setwd("./DeckSlidify")
author("AvgMPG")
publish(user = "VinceTanKW", repo = "ShinyApp2")
